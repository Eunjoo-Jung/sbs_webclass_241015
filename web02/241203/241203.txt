취업시장이 얼어붙어서 현실지원 // 하향지원 // 전략지원 해야함..

> 진짜 이 분야를 좋아하는 사람들의 건강한 경쟁
> 오히려 실력을 더 발전시키기 좋은 시기
> 경기 안좋을 때가 있다면 반동 시기
> 아무리 경기 어려워도 너를 원하는 기업은 있다

==> 포트폴리오 준비 !! 

---------------------------------------------------------------------------------------------------------
 CSS grid
grid : 기획자 입장에서 몇 행, 몇 열을 만들지를 미리 사전에 정의 & 결정이 된 상태에서 사용하면 좋은 레이아웃 박스 시스템
 1) 부모요소에 display:grid; 를 항상 줘야함
 2) 몇개의 열을 생성 : grid-template-columns
 3) 단위 : px / auto / fr = fraction (파편) 
    ※ fr 과 auto는 똑같은 것 같지만 다름 ※
 4) 몇 개의 행을 생성 : grid-template-rows
 5) grid-template-columns / grid-template-row
 6) grid-column-gap : 열과 열 사이의 간격 제어
 7) grid-row-gap : 행과 행 사이의 간격 제어
 8) justify-items: start / center / end
 9) align-items : start / center / end 
 ☆ justify-items: center; +  align-items: center; = 수평에 수직 정렬 ☆
 10) justify-content : start / center / end / space-between / space-around /space-evenly
 > 
* 독립적으로 이동하게 하는 태그 
 11) justify-self : 부모요소의 그리드 레이아웃 정렬과 별개로 직접 레이아웃 정렬을 시켜주고자 할 때 사용할 수 있는 문법
 12) align-self : 부모요소의 그리드 레이아웃 정렬과 별개로 직접 레이아웃 정렬을 시켜주고자 할 때 사용할 수 있는 문법 
 ★ 그리드를 쓰는 궁극적인 이유 
-> 그리드는 사용할때 미리 생각하고 써야함 / flex 처럼 하면서 수정이 불가능 / 항상 열(column)이 먼저임. / row를 먼저 주면 적용이 안됨(밀림)
 13) grid-column: 1 / 3; -> start는 1, end는 3 으로 병합이 되는 태그가 된다 =  grid-column: 1 / span 2; 
그리드 레이아웃 박스의 공간을 정의할 때 사용하는 방법들
- grid-column-start: 1;
- grid-column-end: 3;
- grid-column: 1 / 3;
- grid-column: 1 / span 2;

17) grid-row-start
18) grid-row-end
19) grid-area


flex : 사전에 몇 행, 몇 열을 만들지 정의가 되어있지 않더라도 유연하게 레이아웃을 정렬할 수 있는 박스 시스템


부모요소에서 flex //
 - 중심축 & 교체축
 - row = 가로
** 241119 메모 참고 ** 

width:auto; -> 어떤 요소가 사용할 수 있는 공간을 자동으로 쓰겠다 => width:100%랑 의미는 같지만 쓰임이 다름.  
 > auto : 특정 요소가 사용할 수 있는 너비 혹은 높이를 자동으로 사용하겠다는 의미!!!!